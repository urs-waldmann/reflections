When would you want to use a remote repository rather than keeping all your work local?
In the case that I want other people to see my repository, comment on it, give feedback, work on it...

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
If anybody else made some changes to the remote repository I might want to check the changes before pulling them to my local repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
forks: to make a copy of a remote repository on GitHub only, i.e. making a copy of another user's remote repository to my GitHub account (if e.g. I have no permission to make changes to the (original) remote repository of the other user)
clones: to make a copy of a remote repository to a local repository or to make a copy of a local repository to another local directory
branches: can be only within one repository (both local or remote), you make a new branch if you want to work an a new feature e.g. without modifying the code of the master branch

What is the benefit of having a copy of the last known state of the remote stored locally?
I can fetch only the changes made on the remote repository on an extra branch so that in case I that I also have changes locally I can view them first and if ok, merge them together. Or I can just pull the remote repository on my local repository. Here the two steps described before are done automatically. But therefore Git needs to know the last known state of the remote by the local repository.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
I would use SVN. The disadvantage is that I cannot work offline on my project. And I do not really know how to use SVN. After this course I am more expert in Git than SVN.
